services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: livechat-backend
    ports:
      - '443:443'
    env_file:
      - .env
    volumes:
      - .:/app
      - ./cert:/app/cert # <-- 인증서 파일 바인딩
    command: sh -c "npx prisma db push && npx prisma generate && npm run start:dev"
    environment:
      - TZ=Asia/Seoul
      - CHOKIDAR_USEPOLLING=true
        - CHOKIDAR_INTERVAL=1000
    networks:
      - app-network

  # prisma-studio:
  #   build:
  #     context: .
  #   container_name: prisma-studio
  #   command: npx prisma studio
  #   ports:
  #     - '5555:5555'
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - .env
  #   networks:
  #     - app-network

  # postgres:
  #   image: postgres:15
  #   container_name: postgres-db
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   networks:
  #     - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx-rtmp
    container_name: nginx-hls
    ports:
      - '2935:1935'
      - '80:80'
    volumes:
      # - ./public/hls:/opt/data/hls
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./public:/www/static
    restart: always
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
